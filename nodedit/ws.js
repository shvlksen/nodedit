// Generated by CoffeeScript 1.4.0
(function() {
  var Duplex, WebSocketServer, app, argv, backend, connect, http, livedb, livedbMongo, port, server, share, sharejs, wss;

  Duplex = require('stream').Duplex;

  connect = require('connect');

  argv = require('optimist').argv;

  livedb = require('livedb');

  livedbMongo = require('livedb-mongo');

  http = require('http');

  sharejs = require('../lib');

  app = connect(connect["static"]("" + __dirname + "/public"), connect["static"](sharejs.scriptsDir));

  backend = livedb.client(livedb.memory());

  share = sharejs.server.createClient({
    backend: backend
  });

  server = http.createServer(app);

  WebSocketServer = require('ws').Server;

  wss = new WebSocketServer({
    server: server
  });

  wss.on('connection', function(client) {
    var stream;
    stream = new Duplex({
      objectMode: true
    });
    stream._write = function(chunk, encoding, callback) {
      console.log('s->c ', chunk);
      client.send(JSON.stringify(chunk));
      return callback();
    };
    stream._read = function() {};
    stream.headers = client.upgradeReq.headers;
    stream.remoteAddress = client.upgradeReq.connection.remoteAddress;
    client.on('message', function(data) {
      console.log('c->s ', data);
      return stream.push(JSON.parse(data));
    });
    stream.on('error', function(msg) {
      return client.close(msg);
    });
    client.on('close', function(reason) {
      stream.push(null);
      stream.emit('close');
      console.log('client went away');
      return client.close(reason);
    });
    stream.on('end', function() {
      return client.close();
    });
    return share.listen(stream);
  });

  port = argv.p || 7007;

  server.listen(port);

  console.log("Listening on http://localhost:" + port + "/");

}).call(this);
